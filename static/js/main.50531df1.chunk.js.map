{"version":3,"sources":["assets/image_me.jpg","assets/Resume_Isaiah_Collazo.pdf","assets/logo.png","assets/image_contact.JPG","assets/home_background.jpg","assets/contact_background.jpg","components/home/Home.js","components/projects/ProjectItem.js","util/projectsList.js","components/projects/Projects.js","components/navBar/NavBar.js","components/header/Header.js","util/customHooks/custhomHooks.js","components/contact/EmailForm.js","components/contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","href","target","rel","src","isaiah","alt","onClick","window","open","to","ProjectItem","project","display","name","description","deploymentUrl","githubRepo","images","technologies","imagesList","length","map","image","i","key","redirectToHost","techList","tech","flutter","techTonic","calculator","ourCanvas","Projects","projectListComponent","projectsList","projectObj","push","getProjectComponents","NavBar","exact","resume","Header","logo","useInput","defaultValue","useState","value","setValue","onChange","e","EmailForm","useName","useEmail","useMessage","autoComplete","action","method","for","type","placeholder","required","rows","cols","Contact","size","color","App","location","useLocation","appBackground","backgroundImage","backgroundSize","pathname","homeBackground","contactBackground","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50531df1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image_me.6eca29ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resume_Isaiah_Collazo.6321d579.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.8ca3e748.png\";","module.exports = __webpack_public_path__ + \"static/media/image_contact.b79d2666.JPG\";","module.exports = __webpack_public_path__ + \"static/media/home_background.a99e47ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contact_background.47780f74.jpg\";","import React from 'react';\nimport isaiah from '../../assets/image_me.jpg';\nimport '../../css/home/home.css';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n\n    const directToTwitter = () => {\n        window.open(\"https://twitter.com/IsaiahCollazo8\");\n    }\n    \n    return (\n        <div className=\"homePageContainer\">\n            <div className=\"aboutMe\">\n                <a href=\"https://www.instagram.com/theycallme_zay_/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={isaiah} alt=\"isaiah\" className=\"aboutMeImg\" />\n                </a>\n\n                <div className=\"aboutMeText\">\n                    <h1 className=\"aboutMeTitle\" onClick={directToTwitter}>\n                        This is me\n                    </h1>\n                    <div className=\"aboutMePgraph\">\n                        For as long as I can remember I've been writing down ideas for apps and games that I wanted to make some day, not really knowing the path to get there.\n                        It wasn't until high school that I found the game development software, RPG Maker. That began my love for problem solving. RPG Maker was built using JavaScript and \n                        I would spend hours just doing research on what they used and how to make certain things within the program more custom using the language. The games I built were\n                        always small but ambitious, and I just used them as learning experiences.\n                            <br />\n                            <br />\n                        Using JavaScript with the program inclined me to look further into what the language could be used for, with that I found web development. By my senior year in high\n                        school it was all I could think about. The ability to think of an idea and be able to see it's creation in front of your eyes, slowly building as you go, that's my\n                        favorite part. I'm finally able to make that childhood dream a reality.\n                    </div>\n                    \n                </div>\n            </div>\n            <Link to=\"/projects\" className=\"callToAction\">\n                <button>View My Work</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport '../../css/projects/projectItems.css';\n\nconst ProjectItem = ({ project, display }) => {\n    const {\n        name,\n        description,\n        deploymentUrl,\n        githubRepo,\n        images,\n        technologies\n    } = project;\n\n    const redirectToHost = ( image ) => {\n        window.open(image);\n    }\n\n    const getImagesList = () => {\n        let imagesList = [];\n\n        if(images.length) {\n            imagesList = images.map((image, i) => {\n                return (\n                    <div key={i} className=\"imageWrapper\" onClick={() => redirectToHost(image)} >\n                        <img src={image} alt={name} />\n                    </div>\n                )\n            })\n        } else {\n            return <p className=\"error\">No images found</p>\n        }\n\n        return imagesList;\n    }\n\n    const imagesList = getImagesList();\n    \n    const techList = technologies.map((tech, i) => {\n        return (\n            <li key={i}>{tech}</li>\n        )\n    })\n\n    return (\n        <div className={`projectItem ${display}`}>\n            <div className=\"projectItemImages\">\n                {images.length ? \n                    <Carousel>\n                        {imagesList}\n                    </Carousel> : \n                    imagesList\n                }\n            </div>\n\n            <div className=\"projectItemInfo\">\n                <header>\n                    <p className=\"projectItemName\">{name}</p>\n                    {deploymentUrl ? \n                        <a href={deploymentUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                            Live\n                        </a> :\n                        null}\n                    <a href={githubRepo} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Github\n                    </a>\n                </header>\n\n                <p className=\"projectItemDesc\">{description}</p>\n\n                <ul className=\"projectItemTechnologies\">\n                    {techList}\n                </ul>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProjectItem; ","export default {\n    flutter: {\n        name: \"Flutter\",\n        description: `\n            I was tasked with creating my version of a popular social media app, and with \n            that challenge, Flutter was born. Flutter is a web app that takes inspiration\n            from Twitter. On Flutter, a user can setup their own account, make new posts,\n            search all user related data, interact with other users and browse the days \n            top news stories.\n        `,\n        deploymentUrl: \"https://flutter-twitter.netlify.app/\",\n        githubRepo: \"https://github.com/IsaiahCollazo99/Flutter\",\n        images: [\n            \"https://i.imgur.com/qN3Q9I8.png\",\n            \"https://i.imgur.com/SFi8Q4p.png\",\n            \"https://i.imgur.com/DoseNxi.png\"\n        ],\n        technologies: [\n            \"ReactJS\",\n            \"Express\",\n            \"NodeJS\",\n            \"Firebase\",\n            \"SQL\"\n        ]\n    },\n\n    techTonic: {\n        name: \"Tech Tonic\",\n        description: `\n            A Twitter feed of top tech resources, opportunities, news. Tech Tonic provides\n            the user with the ability to search for any tech related tweets that fits them.\n            During the development process I was the technical lead, and was in charge of\n            implementing Twitter's API. Using express I set up a backend to make API calls,\n            and set up the structure for how the data is sent to the API, and the\n            functionality behind components that would need to interact with the API.\n        `,\n        deploymentUrl: \"\",\n        githubRepo: \"https://github.com/IsaiahCollazo99/ttnn\",\n        images: [],\n        technologies: [\n            \"ReactJS\",\n            \"Express\",\n            \"NodeJS\",\n            \"Twitter API\"\n        ]\n    },\n\n    calculator: {\n        name: \"Calculator\",\n        description: `\n            A simple recreation of the popular Calculator app for your browser. I was\n            able to create my own algorithm for order of operations including all operations\n            up to exponents.\n        `,\n        deploymentUrl: \"\",\n        githubRepo: \"https://github.com/IsaiahCollazo99/Calculator\",\n        images: [\n            \"https://i.imgur.com/JeSgSk5.png\",\n            \"https://i.imgur.com/BUOqiHF.png\",\n            \"https://i.imgur.com/KbHi6s4.png\"\n        ],\n        technologies: [\n            \"ReactJS\"\n        ]\n    },\n\n    ourCanvas: {\n        name: \"Our Canvas\",\n        description: `\n            Our Canvas is a web app that is used to link artists from all different\n            categories of art for their projects. If you are a musician, and want to\n            work on a video game you can search for a video game tag and find designers\n            looking for music for their games. At Our Canvas I contributed to the user\n            authentication, the styling, and the database queries and error handling on the\n            backend.\n        `,\n        deploymentUrl: \"\",\n        githubRepo: \"https://github.com/IsaiahCollazo99/Our-Canvas\",\n        images: [\n            \"https://i.imgur.com/4sR22i6.png\",\n            \"https://i.imgur.com/GZqIqRC.png\",\n            \"https://i.imgur.com/BsOFQ9b.png\"\n        ],\n        technologies: [\n            \"ReactJS\",\n            \"NodeJS\",\n            \"Express\",\n            \"SQL\",\n            \"Multer\"\n        ]\n    }\n}","import React from 'react';\nimport ProjectItem from './ProjectItem';\nimport projectsList from '../../util/projectsList';\nimport '../../css/projects/projects.css';\n\nconst Projects = () => {\n    const getProjectComponents = () => {\n        const projectListComponent = [];\n        let i = 0;\n        for(let key in projectsList) {\n            const projectObj = projectsList[key];\n            let display;\n            if(i % 2 === 0) {\n                display = \"regular\";\n            } else {\n                display = \"reverse\";\n            }\n            projectListComponent.push(<ProjectItem project={projectObj} key={key} display={display}/>);\n            i++;\n        }\n        return projectListComponent;\n    }\n    \n    const projectListComponent = getProjectComponents();\n    \n    return (\n        <div className=\"projectsPageContainer\">\n            {projectListComponent}\n        </div>\n    )\n}\n\nexport default Projects;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport resume from '../../assets/Resume_Isaiah_Collazo.pdf';\nimport '../../css/navBar/navBar.css';\n\nconst NavBar = () => {\n    return (\n        <nav className=\"mainNav\">\n            <div className=\"navLinkContainer\">\n                <NavLink exact to=\"/\" className=\"navLink\">ME</NavLink>\n                <NavLink exact to=\"/projects\" className=\"navLink\">MY WORK</NavLink>\n                <NavLink to=\"/contact\" className=\"navLink\">CONTACT</NavLink>\n                <a className=\"navLink lastNav\" href={resume} target=\"_blank\" rel=\"noopener noreferrer\">RESUME</a>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar;","import React from 'react';\nimport NavBar from '../navBar/NavBar';\nimport logo from '../../assets/logo.png';\nimport '../../css/header/header.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"headerLeft\">\n                <Link to=\"/\"><img src={logo} alt=\"Logo\" className=\"headerLogo\" /></Link>\n                \n                <div className=\"headerText\">\n                    <a href=\"https://www.linkedin.com/in/isaiah-collazo-aa0188151/\" target=\"_blank\" className=\"noDecoration white\" rel=\"noopener noreferrer\">\n                        <p className=\"headerName\">Isaiah Collazo</p>\n                    </a>\n                    <a href=\"https://en.wikipedia.org/wiki/Web_developer\" target=\"_blank\" className=\"noDecoration grey\" rel=\"noopener noreferrer\">\n                        <p className=\"headerJob\">Web Developer</p>\n                    </a>\n                </div>\n            </div>\n\n            <div className=\"headerRight\">\n                <NavBar />\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import { useState } from \"react\"\n\nexport const useInput = (defaultValue) => {\n    let [value, setValue] = useState(defaultValue);\n\n    const onChange = (e) => {\n        setValue(e.target.value);\n    }\n\n    return {value, onChange}\n}","import React from 'react';\nimport { useInput } from '../../util/customHooks/custhomHooks';\n\nconst EmailForm = () => {\n    const useName = useInput(\"\");\n    const useEmail = useInput(\"\");\n    const useMessage = useInput(\"\");\n\n    return (\n        <form className=\"emailForm\" autoComplete=\"off\" action=\"https://formspree.io/mjvaklbn\" method=\"POST\" name=\"emailForm\">\n\n            <div className=\"userInfo\">\n                <label for=\"name\" className=\"nameLabel\">Name: </label>\n                <input type=\"text\" {...useName} placeholder=\"Enter Your Name\" name=\"name\" required className=\"nameInput\"/>\n\n                <label for=\"_replyto\" className=\"emailLabel\">Email: </label>\n                <input type=\"email\" {...useEmail} placeholder=\"Enter Your Email\" name=\"_replyto\" required className=\"emailInput\"/>\n            </div>\n\n            <div className=\"formMessage\">\n                <label for=\"message\">Message: </label>\n                <textarea {...useMessage} placeholder=\"Enter Your Message\" name=\"message\" required rows=\"10\" cols=\"30\"/>\n            </div>\n\n            <input type=\"submit\" value=\"Send Message\"/>\n        </form>\n    )\n}\n\nexport default EmailForm;","import React from 'react';\nimport isaiah from '../../assets/image_contact.JPG';\nimport { FaLinkedin, FaGithubSquare, FaTwitterSquare } from 'react-icons/fa';\nimport '../../css/contact/contact.css';\nimport EmailForm from './EmailForm';\n\nconst Contact = () => {\n    \n    return (\n        <div className=\"contactContainer\">\n            <div className=\"contactPic\">\n                <a href=\"https://www.linkedin.com/in/isaiah-collazo-aa0188151/\" className=\"contactPicAnchor\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={isaiah} alt=\"isaiah\"/>\n                </a>\n                <div className=\"contactInfo\">\n\n                    <a href=\"mailto:isaiahramoncollazo@gmail.com\" className=\"contactEmail\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        isaiahramoncollazo@gmail.com\n                    </a>\n                    \n                    <div className=\"socialMedia\">\n                        <a href=\"https://www.linkedin.com/in/isaiah-collazo-aa0188151/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FaLinkedin className=\"icon\" size=\"75px\" color=\"#0077B5\"/>\n                        </a>\n                        <a href=\"https://github.com/IsaiahCollazo99\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FaGithubSquare className=\"icon\" size=\"75px\" color=\"#24292E\"/>\n                        </a>\n\n                        <a href=\"https://twitter.com/IsaiahCollazo8\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FaTwitterSquare className=\"icon\" size=\"75px\" color=\"#1DA1F2\" />\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n\n            <EmailForm />\n        </div>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport Home from './components/home/Home';\nimport Projects from './components/projects/Projects';\nimport Header from './components/header/Header';\nimport Contact from './components/contact/Contact';\nimport homeBackground from './assets/home_background.jpg';\nimport contactBackground from './assets/contact_background.jpg';\n\nfunction App() {\n  const location = useLocation();\n\n  let appBackground = {\n    backgroundImage: null,\n    backgroundSize: \"cover\"\n  }\n\n  if(location.pathname === \"/\") {\n    appBackground.backgroundImage = \"url(\" + homeBackground + \")\";\n  } else if(location.pathname === \"/contact\") {\n    appBackground.backgroundImage = \"url(\" + contactBackground + \")\";\n  } else if(location.pathname === \"/projects\") {\n    appBackground = {\n      \"background-color\": \"#1b272f\"\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Switch>\n        <Route exact path={\"/\"}>\n          <Home />\n        </Route>\n\n        <Route exact path={\"/projects\"}>\n          <Projects />\n        </Route>\n\n        <Route exact path={\"/contact\"}>\n          <Contact />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}